{"version":3,"sources":["components/discordLogin.tsx","models.tsx","components/itemSelector/itemSelector.tsx","components/itemRow.tsx","util.tsx","pages/priorityManagementPage.tsx","components/itemSelector/itemProvider.tsx","context.tsx","api.tsx","components/priorityValidators.tsx","components/selectedItems.tsx","components/header.tsx","app.tsx","index.tsx"],"names":["styled","a","img","Raid","AutoSuggest","onChangeDebounced","debounce","props","this","onChange","event","persist","React","Component","ItemSelector","state","disabled","searching","currentResults","searchText","wrapperRef","setWrapperRef","node","handleClickOutside","contains","target","reset","itemProvider","abort","search","value","filter","length","setState","getItems","document","addEventListener","removeEventListener","ref","className","placeholder","items","onClick","item","onItemSelected","resetOnSelection","Result","div","ResultWrap","Results","map","name","type","slot","ItemRow","onDelete","SetupState","APIItemProvider","api","searchItems","results","APIContext","createContext","apiRoot","getPriority","fetch","redirect","mode","credentials","result","status","Error","json","updatePriority","itemIds","method","headers","body","JSON","stringify","process","mcValidator","rule","isValid","i","zone","MC","ONY","bwlValidator","BWL","aq40Validator","AQ_40","otherValidator","PriorityValidatorMessage","valid","validator","undefined","SelectedItems","array","prop","max","groupedSelectedItems","selected","reduce","groups","val","push","useContext","validators","v","find","id","onAddNew","concat","Object","keys","ZG","formatZone","newItems","onChangeSelection","Header","PriorityManagementPage","Page","setupState","None","priority","saveEnabled","saveButtonText","feelGood","setup","Fetching","priorityPage","pi","Success","isFetching","isError","isSuccess","addNewItem","saveButtonTimeout","setSaveButton","text","clearTimeout","setTimeout","save","classList","add","remove","message","newSelections","el","App","console","log","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.094b9138.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n//import discordIcon from \"../images/discord-white.svg\";\n\nconst ButtonWrap = styled.a`\n  display: inline-flex;\n  align-items: center;\n  padding: 10px 20px 10px 10px;\n  font-size: 45px;\n  background-color: #7289da;\n  border-radius: 5px;\n  color: #fff;\n  cursor: pointer;\n`;\nconst IconWrap = styled.img`\n  height: 80px;\n  margin-right: 10px;\n`;\nconst DiscordIcon = () => {\n  return null; //return <IconWrap src={discordIcon} alt=\"discord logo\" />;\n};\n\nexport const DiscordLoginButton = () => (\n  <ButtonWrap>\n    <DiscordIcon />\n    Login with Discord\n  </ButtonWrap>\n);\n","export enum Raid {\n  MC = \"MC\",\n  BWL = \"BWL\",\n  AQ_40 = \"AQ40\",\n  ZG = \"ZG\",\n  ONY = \"ONY\",\n}\n\nexport interface PriorityItem {\n  id: number;\n  added: string;\n  updated: string;\n  item: Item;\n}\n\nexport interface Item {\n  id: number;\n  zone: Raid;\n  name: string;\n  type: string;\n  slot: string;\n}\n","import React, {\n  FC,\n  DetailedHTMLProps,\n  ChangeEvent,\n  useRef,\n  useState,\n} from \"react\";\nimport { ItemProvider } from \"./itemProvider\";\nimport { debounce } from \"ts-debounce\";\nimport { Item } from \"../../models\";\nimport styled from \"styled-components\";\n\ntype AutoSuggestProps = React.DetailedHTMLProps<\n  React.InputHTMLAttributes<HTMLInputElement>,\n  HTMLInputElement\n>;\n\nclass AutoSuggest extends React.Component<\n  AutoSuggestProps & {\n    onChangeDebounced: (event: ChangeEvent<HTMLInputElement>) => void;\n  }\n> {\n  private onChangeDebounced = debounce(this.props.onChangeDebounced, 300);\n\n  render() {\n    return (\n      <input\n        {...this.props}\n        onChange={(event: ChangeEvent<HTMLInputElement>) => {\n          event.persist();\n          this.props.onChange && this.props.onChange(event);\n          this.onChangeDebounced(event);\n        }}\n      />\n    );\n  }\n}\n\nexport interface ItemSelectorProps {\n  itemProvider: ItemProvider;\n  resetOnSelection?: boolean;\n  onItemSelected: (item: Item) => void;\n}\n\ninterface ItemSelectorState {\n  searching: boolean;\n  disabled: boolean;\n  currentResults: Array<Item>;\n  searchText: string;\n}\n\nexport class ItemSelector extends React.Component<\n  ItemSelectorProps,\n  ItemSelectorState\n> {\n  state: ItemSelectorState = {\n    disabled: false,\n    searching: false,\n    currentResults: [],\n    searchText: \"\",\n  };\n  wrapperRef?: HTMLDivElement;\n\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  /**\n   * Set the wrapper ref\n   */\n  setWrapperRef = (node: HTMLDivElement) => {\n    this.wrapperRef = node;\n  };\n\n  /**\n   * Alert if clicked on outside of element\n   */\n  handleClickOutside = (event: any) => {\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n      this.reset();\n      this.props.itemProvider.abort();\n    }\n  };\n\n  onChange = (event: ChangeEvent<HTMLInputElement>) => {\n    this.search(event.target.value);\n  };\n\n  search = async (filter: string) => {\n    this.props.itemProvider.abort();\n    if (filter.length < 3) {\n      this.setState({\n        searching: false,\n        disabled: false,\n        currentResults: [],\n      });\n      return;\n    }\n    this.setState({\n      searching: true,\n    });\n    try {\n      this.setState({\n        currentResults: await this.props.itemProvider.getItems(filter),\n      });\n    } finally {\n      this.setState({\n        searching: false,\n        disabled: false,\n      });\n    }\n  };\n\n  reset = () => {\n    this.setState({\n      currentResults: [],\n      searchText: \"\",\n    });\n  };\n\n  render() {\n    return (\n      <div ref={this.setWrapperRef} className=\"item-selector\">\n        <AutoSuggest\n          value={this.state.searchText}\n          className=\"auto-suggest big\"\n          placeholder=\"Search for items...\"\n          onChange={(event: ChangeEvent<HTMLInputElement>) => {\n            this.setState({ disabled: true, searchText: event.target.value });\n          }}\n          onChangeDebounced={this.onChange}\n        />\n        {this.state.currentResults.length > 0 && (\n          <Results\n            disabled={this.state.disabled}\n            items={this.state.currentResults}\n            onClick={(item) => {\n              this.props.onItemSelected(item);\n              if (this.props.resetOnSelection) {\n                this.reset();\n              }\n            }}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst Result = styled.div`\n  cursor: pointer;\n  padding: 10px;\n  border-bottom: 1px solid #eee;\n  &:hover {\n    background-color: #eee;\n  }\n`;\n\nconst ResultWrap = styled.div<{ disabled: boolean }>`\n  pointerevents: ${(props) => (props.disabled ? \"none\" : \"inherit\")};\n  ${Result} {\n    opacity: ${(props) => (props.disabled ? 0.5 : 1)};\n  }\n`;\n\ninterface ResultsProps {\n  items: Array<Item>;\n  disabled: boolean;\n  onClick: (item: Item) => void;\n}\n\nconst Results = (props: ResultsProps) => {\n  return (\n    <ResultWrap className=\"result-wrap\" disabled={props.disabled}>\n      {props.items.map((item: Item) => (\n        <Result className=\"result\" onClick={() => props.onClick(item)}>\n          <div className=\"name\">{item.name}</div>\n          <div className=\"type\">{item.type}</div>\n          <div className=\"slot\">{item.slot}</div>\n        </Result>\n      ))}\n    </ResultWrap>\n  );\n};\n","import React from \"react\";\nimport { Item } from \"../models\";\n\nexport interface ItemRowProps {\n  item: Item;\n  onDelete: () => void;\n}\n\nexport const ItemRow = (props: ItemRowProps) => {\n  return (\n    <div className=\"item-row\">\n      <div className=\"name\">{props.item.name}</div>\n      <div className=\"type\">{props.item.type}</div>\n\n      <div className=\"item-action\">\n        <div className=\"button delete\" onClick={props.onDelete}>\n          delete\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { Raid } from \"./models\";\n\nexport function groupBy<T>(\n  array: Array<T>,\n  prop: string\n): { [key: string]: Array<T> } {\n  return array.reduce(function(groups: { [key: string]: Array<T> }, item: any) {\n    const val = item[prop];\n    groups[val] = groups[val] || [];\n    groups[val].push(item);\n    return groups;\n  }, {});\n}\n\nexport const formatZone = (zone: Raid) => {\n  switch (zone) {\n    case Raid.BWL:\n      return \"Blackwing Lair\";\n    case Raid.MC:\n      return \"Molten Core\";\n    case Raid.ONY:\n      return \"Onyxia\";\n    case Raid.ZG:\n      return \"Zul'gurub\";\n  }\n\n  return zone;\n};\n","import React, { useContext, FC } from \"react\";\nimport { APIContext } from \"../context\";\nimport { API } from \"../api\";\nimport { Item } from \"../models\";\nimport { SelectedItems } from \"../components\";\n\nexport const PriorityManagementPage: FC = () => {\n  const api = useContext(APIContext);\n\n  return <Page api={api} />;\n};\n\ninterface PageProps {\n  api: API;\n}\n\nenum SetupState {\n  None,\n  Fetching,\n  Success,\n  Error,\n}\n\ninterface PageState {\n  setupState: SetupState;\n  priority: Array<Item>;\n  saveEnabled: boolean;\n  saveButtonText: string;\n}\n\nclass Page extends React.Component<PageProps, PageState> {\n  state = {\n    setupState: SetupState.None,\n    priority: [],\n    saveEnabled: false,\n    saveButtonText: \"Save Changes\",\n  } as PageState;\n\n  private feelGood: HTMLDivElement | null = null;\n  componentDidMount() {\n    this.setup();\n  }\n\n  setup = async () => {\n    this.setState({\n      setupState: SetupState.Fetching,\n    });\n    const { api } = this.props;\n\n    try {\n      const priorityPage = await api.getPriority();\n      this.setState({\n        priority: priorityPage.results.map((pi) => pi.item),\n        setupState: SetupState.Success,\n      });\n    } catch {\n      this.setState({\n        setupState: SetupState.Error,\n      });\n    }\n  };\n\n  private isFetching = () => this.state.setupState == SetupState.Fetching;\n  private isError = () => this.state.setupState == SetupState.Error;\n  private isSuccess = () => this.state.setupState == SetupState.Success;\n\n  addNewItem = (item: Item, isValid: boolean) => {\n    if (!!this.state.priority.find((i) => i.id == item.id)) return;\n\n    this.setState({\n      priority: this.state.priority.concat(item),\n      saveEnabled: isValid,\n    });\n  };\n\n  private saveButtonTimeout?: number;\n  setSaveButton = (text: string) => {\n    clearTimeout(this.saveButtonTimeout);\n    this.setState({\n      saveButtonText: text,\n    });\n\n    this.saveButtonTimeout = setTimeout(() => {\n      this.setState({\n        saveButtonText: \"Save Changes\",\n      });\n    }, 3000);\n  };\n\n  save = async () => {\n    if (!this.state.saveEnabled) return;\n\n    try {\n      await this.props.api.updatePriority(this.state.priority.map((i) => i.id));\n      this.setSaveButton(\"Save Successful!\");\n      if (this.feelGood) {\n        this.feelGood.classList.add(\"feel-good-animate\");\n        setTimeout(() => {\n          this.feelGood!.classList.remove(\"feel-good-animate\");\n        }, 4000);\n      }\n    } catch (exc) {\n      this.setSaveButton(\"Error Saving: \" + exc.message);\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Priority Management</h1>\n\n        {this.isFetching() && <div>Fetching priority...</div>}\n        {this.isError() && (\n          <div>Error getting priority items. Try to refresh the page.</div>\n        )}\n        {this.isSuccess() && (\n          <div className=\"selected-item-wrap\">\n            <SelectedItems\n              max={6}\n              selected={this.state.priority}\n              onAddNew={this.addNewItem}\n              onChangeSelection={(newSelections, isValid) =>\n                this.setState({ priority: newSelections, saveEnabled: isValid })\n              }\n            />\n            <div className=\"spacer\"></div>\n            <div\n              className={\n                \"button save-prio big centered \" +\n                (this.state.saveEnabled ? \"\" : \"disabled\")\n              }\n              onClick={this.save}\n            >\n              {this.state.saveButtonText}\n            </div>\n          </div>\n        )}\n        <div ref={(el) => (this.feelGood = el)} className=\"feels-good\"></div>\n      </div>\n    );\n  }\n}\n","import { Item, Raid } from \"../../models\";\nimport { API } from \"../../api\";\n\nexport interface ItemProvider {\n  getItems: (name: string) => Promise<Array<Item>>;\n  abort: () => void;\n}\n\nexport class APIItemProvider implements ItemProvider {\n  private api: API;\n  constructor(api: API) {\n    this.api = api;\n  }\n  getItems = async (name: string): Promise<Item[]> => {\n    const items = await this.api.searchItems(name);\n    return items.results;\n  };\n  abort = () => {};\n}\n","import React from \"react\";\nimport { API } from \"./api\";\n\nexport const APIContext = React.createContext(\n  new API(process.env.REACT_APP_API_ROOT!)\n);\n","import { Item, PriorityItem } from \"./models\";\n\ninterface ItemResult<T> {\n  count: number;\n  next?: string;\n  previous?: string;\n  results: Array<T>;\n}\n\nexport class API {\n  private apiRoot: string;\n  constructor(apiRoot: string) {\n    this.apiRoot = apiRoot;\n  }\n\n  getPriority = async () => {\n    const result = await fetch(`${this.apiRoot}priorities/`, {\n      redirect: \"follow\",\n      mode: \"cors\",\n      credentials: \"include\",\n    });\n    if (result.status !== 200) {\n      throw new Error(\"Error getting priority\");\n    }\n    return (await result.json()) as ItemResult<PriorityItem>;\n  };\n\n  updatePriority = async (itemIds: Array<number>) => {\n    const result = await fetch(`${this.apiRoot}priorities/bulk_update/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      redirect: \"follow\",\n      mode: \"cors\",\n      credentials: \"include\",\n      body: JSON.stringify({ items: itemIds }),\n    });\n    if (result.status == 400) {\n      throw new Error((await result.json())[\"non_field_errors\"]);\n    }\n    if (result.status !== 201) {\n      throw new Error(\"generic error updating priority\");\n    }\n  };\n\n  searchItems = async (filter: string) => {\n    const result = await fetch(`${this.apiRoot}items/?search=${filter}`, {\n      redirect: \"follow\",\n      mode: \"cors\",\n      credentials: \"include\",\n    });\n    if (result.status !== 200) {\n      throw new Error(\"Error getting items\");\n    }\n    return (await result.json()) as ItemResult<Item>;\n  };\n}\n","import React from \"react\";\nimport { Item, Raid } from \"../models\";\n\nexport interface ItemValidator {\n  rule: string;\n  isValid: (items: Array<Item>) => boolean;\n}\n\nexport const maxValidator = (max: number) => {\n  return {\n    rule: `Up to ${max} items total`,\n    isValid: (items: Array<Item>) => {\n      return items.length <= max;\n    },\n  };\n};\n\nexport const mcValidator = {\n  rule: \"Up to 3 items from Molten Core or Onyxia\",\n  isValid: (items: Array<Item>) => {\n    return (\n      items.filter((i) => i.zone == Raid.MC || i.zone == Raid.ONY).length <= 3\n    );\n  },\n};\n\nexport const bwlValidator = {\n  rule: \"Up to 3 items from Blackwing Lair\",\n  isValid: (items: Array<Item>) => {\n    return items.filter((i) => i.zone == Raid.BWL).length <= 3;\n  },\n};\n\nexport const aq40Validator = {\n  rule: \"Up to 3 items from AQ40\",\n  isValid: (items: Array<Item>) => {\n    return items.filter((i) => i.zone == Raid.AQ_40).length <= 3;\n  },\n};\n\nexport const otherValidator = {\n  rule: \"Optional: Fill remaining slots with other raids\",\n  isValid: (items: Array<Item>) => {\n    return true;\n  },\n};\n\nexport const PriorityValidatorMessage = (props: {\n  validator: ItemValidator;\n  items: Array<Item>;\n}) => {\n  const valid = props.validator.isValid(props.items);\n  return (\n    <span className={valid ? undefined : \"invalid\"}>\n      {props.validator.rule}\n    </span>\n  );\n};\n","import React, { useState, useContext } from \"react\";\nimport { Item, Raid } from \"../models\";\nimport { ItemRow } from \"./itemRow\";\nimport { groupBy, formatZone } from \"../util\";\nimport { ItemSelector } from \"./itemSelector\";\nimport { APIItemProvider } from \"./itemSelector/itemProvider\";\nimport { APIContext } from \"../context\";\nimport {\n  maxValidator,\n  mcValidator,\n  bwlValidator,\n  aq40Validator,\n  otherValidator,\n  PriorityValidatorMessage,\n} from \"./priorityValidators\";\n\nexport interface SelectedItemsProps {\n  selected: Array<Item>;\n  max: number;\n  onChangeSelection: (newItems: Array<Item>, isValid: boolean) => void;\n  onAddNew: (item: Item, isValid: boolean) => void;\n}\n\nexport const SelectedItems = (props: SelectedItemsProps) => {\n  const groupedSelectedItems = groupBy(props.selected, \"zone\");\n  const api = useContext(APIContext);\n\n  const validators = [\n    maxValidator(9),\n    mcValidator,\n    bwlValidator,\n    aq40Validator,\n    otherValidator,\n  ];\n\n  return (\n    <div className=\"selected-items\">\n      <div className=\"selected-items-instructions\">\n        <span>Priority list rules:</span>\n        <ul>\n          {validators.map((v) => (\n            <li>\n              <PriorityValidatorMessage validator={v} items={props.selected} />\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <ItemSelector\n        resetOnSelection\n        itemProvider={new APIItemProvider(api)}\n        onItemSelected={(item: Item) => {\n          if (!!props.selected.find((i) => i.id == item.id)) return;\n\n          props.onAddNew(\n            item,\n            validators.reduce(\n              (valid: boolean, validator) =>\n                valid && validator.isValid(props.selected.concat(item)),\n              true\n            )\n          );\n        }}\n      />\n\n      {Object.keys(groupedSelectedItems).map((zone) => {\n        return (\n          <div className=\"zone\">\n            <h2>{formatZone(zone as Raid)}</h2>\n            {groupedSelectedItems[zone].map((item) => (\n              <ItemRow\n                item={item}\n                onDelete={() => {\n                  const newItems = props.selected.filter(\n                    (i) => i.id != item.id\n                  );\n                  const isValid = validators.reduce(\n                    (valid: boolean, validator) =>\n                      valid && validator.isValid(newItems),\n                    true\n                  );\n\n                  props.onChangeSelection(newItems, isValid);\n                }}\n              />\n            ))}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const Header: React.FC = () => (\n  <div className=\"header\">\n    <div>\n      <div className=\"wordmark\">Mischief@Pagle</div>\n    </div>\n  </div>\n);\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./styles/app.scss\";\nimport { Header } from \"./components\";\nimport { PriorityManagementPage } from \"./pages\";\nimport { APIContext } from \"./context\";\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <div className=\"page-wrap\">\n        <PriorityManagementPage />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app\";\n\nconsole.log(process.env.REACT_APP_API_ROOT);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}